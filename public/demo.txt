作者：召伯树
链接：https://www.zhihu.com/question/303891644/answer/547671170
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

有人说“太低端，太简单”，显然是错误的。我见 HTML 比 CSS 难度低得多，也没人讨厌写。直接回答问题的话，答案就是 CSS 比 JS 更加难以熟练和精通，很多说自己会 CSS 的人实际上对 CSS 一知半解，难以写出优质的 CSS  代码。——————————————————————————————很多人会认为，“CSS 上手难度比 JS 低，会 JS 的理论上都会 CSS，反过来不一定”，但这种话是极不准确的。看起来 CSS 就是一门 DSL ，仅仅就是选择器加上属性，但实际上无论是选择器还是属性都有很大的文章可以做。CSS 的属性的难点在于繁杂。每个属性之间并不是正交的，很多属性之间会互相影响产生各种意想不到的效果。然而当细致了解了文档流/上下文/盒模型等概念之后，才会觉得这些特征其实是情理之中的。可是关于如何系统性的掌握这些概念，我反正是没有看到有什么好的学习资料，有一本 CSS 权威指南，不过太老了缺乏 css3 的内容，新版的译本也遥遥无期。其他的资料或许提及了，但大多也是管中窥豹。更别说早期的网页只是用来显示文档，类似于 doc ，而现在却用来做应用界面，其开发思路的转变也让 css 的属性变得让人难以理解。另外还有各个浏览器兼容的问题。CSS 的选择器的难点更在于抽象思维。大多数人会觉得选择器无非是声明了一系列的 pattern 。但实际开发中 CSS 不是单独的，你需要写 HTML 生成 pattern 对应的 DOM 结构。更重要的是，网页是动态的，你需要通过 JS 去维护这一系列的 pattern。随着网页的动态性的增加，维护的难度也成指数上升。不同的选择器组合可以生成同一种效果，但其维护的难度却可以是大相径庭。而完成这样的任务就是在考验前端的抽象思维能力。这就很像函数式，看起来 arr.map(v=>v.id) 比 for 循环更简单更好理解，但如何去声明组合各个函数却是对程序员新的要求。如果对一个高度动态的网页感到陌生，可以去 Awwwards - Website Awards - Best Web Design Trends 见识下。——————————————————————————————CSS 的这一套东西本应该是被严肃对待的，然而实际的开发中，愿意严肃对待的人毕竟还是少了，选择逃避的人多了。 个人觉得，一个前端工程师讨厌写 css 是一个态度的问题。